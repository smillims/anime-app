{"version":3,"sources":["data/dataStore.js","framework/element.js","framework/render.js","components/Header/Header.js","data/animeSearchAPI.js","data/animeData.js","components/SortForm/SortForm.js","components/Card/Card.js","components/Card/index.js","components/CardsList/CardsList.js","components/CardsList/index.js","components/AnimeCardsResults/AnimeCardsResults.js","components/App/App.js","components/App/index.js","script.js"],"names":["dataStore","currentTitle","isDataLoading","error","cashOfAnimeSearch","createElement","tag","props","children","element","DocumentFragment","document","Object","entries","forEach","name","value","startsWith","toLowerCase","window","addEventListener","substr","includes","removeAttribute","setAttribute","e","console","child","appendChild","parent","Array","isArray","subChild","nodeType","createTextNode","toString","createFragment","Component","Target","renderApp","componentFunction","targetElement","innerHTML","Header","header","headerH1","getAnimeSearchUrl","search","replace","isCurrentTitleDataLoaded","validateAndLoadData","url","Promise","resolve","fetch","then","response","json","data","performSearch","animeTitle","filterAnime","filterAnimeByTitle","length","catch","finally","results","filter","anime","rated","title","SortForm","styles","sectionForm","sortForm","explicitOriginalTarget","nextElementSibling","SearchInputSortForm","ApplyButtonSortForm","formButton","target","form","firstChild","Card","card","mal_id","cardImgContainer","cardImg","image_url","cardItemContainer","cardItemH3","cardItemRating","score","cardItemText","synopsis","cardButton","CardsList","animeSearch","main","cardsItems","map","AnimeCardsResults","content","paragraphOfState","App","getElementById"],"mappings":"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","file":"script.92f26523.js","sourceRoot":"..\\src","sourcesContent":["const dataStore = {\n  currentTitle: '',\n  isDataLoading: false,\n  error: null,\n  cashOfAnimeSearch: {},\n};\n\nexport default dataStore;\n","/**\n * Creates DOM Node. Implements jsx-parser's createElement API\n * @param {string|Function} tag - HTML tag as string or Component function\n * @param {object} props - element properties as parsed by jsx-parser\n * @param {Node[]} children - child elements\n * @returns {DocumentFragment|Element}\n */\nexport const createElement = (tag, props, ...children) => {\n  if (typeof tag === 'function') {\n    /*\n      Passing children as the 2nd argument is required as jsx transformer puts component functions\n      and regular tags in wrapper functions that expect children as the 2nd param\n     */\n    //console.log(tag, props, ...children);\n    return tag({ ...props, children }, children);\n  }\n  const element = tag === '' ? new DocumentFragment() : document.createElement(tag);\n  Object.entries(props || {}).forEach(([name, value]) => {\n    if (name.startsWith('on') && name.toLowerCase() in window) {\n      element.addEventListener(\n        name.toLowerCase().substr(2),\n        /** @type {Function} */\n        value,\n      );\n      //console.log(typeof value, value, typeof name, name);\n    } else {\n      try {\n        if (!(element instanceof DocumentFragment)) {\n          // Boolean attributes are considered to be true if they're present on the element at all, regardless of their actual value\n          // https://developer.mozilla.org/en-US/docs/Web/API/Element/setAttribute#example\n          if (['disabled', 'checked'].includes(name) && !value) {\n            element.removeAttribute(name);\n          } else {\n            element.setAttribute(name, value);\n          }\n        }\n      } catch (e) {\n        console.error('createElement caught', e, 'on', element);\n      }\n    }\n  });\n\n  children.forEach(child => appendChild(element, child));\n\n  return element;\n};\n\n/**\n * Appends child elements from an unbound array of children, recursively\n * @param {Node} parent\n * @param {Node|[Node]} child\n */\nconst appendChild = (parent, child) => {\n  if (Array.isArray(child)) {\n    child.forEach(subChild => appendChild(parent, subChild));\n  } else {\n    // Skip null and undefined\n    if (child != null) {\n      parent.appendChild(child.nodeType ? child : document.createTextNode(child.toString()));\n    }\n  }\n};\n\n/**\n * Creates Fragment. Implements jsx-parser's createFragment API\n * @param {object} props - effectively a placeholder, fragment never has any properties\n * @param {Node[]} children - child elements\n * @returns {DocumentFragment}\n */\nexport const createFragment = (props, ...children) => createElement('', props, ...children);\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement } from './element';\nlet Component, Target;\n\nexport default function renderApp(componentFunction = null, targetElement = null) {\n  if (componentFunction) Component = componentFunction;\n  if (targetElement) Target = targetElement;\n  Target.innerHTML = '';\n  Target.appendChild(<Component />);\n}\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement } from '../../framework/element';\nimport { header, headerH1 } from './css/style.css';\n\nexport default function Header() {\n  return (\n    <header class={header}>\n      <h1 class={headerH1} title=\"* read like Tsundoku\">\n        積ん読 *\n      </h1>\n    </header>\n  );\n}\n","export function getAnimeSearchUrl(search) {\n  const stringToUrl = search.replace(/\\s+/g, '');\n  return `https://api.jikan.moe/v3/search/anime?q=${stringToUrl}&page=1`;\n}\n","import { getAnimeSearchUrl } from './animeSearchAPI';\nimport renderApp from '../framework/render';\n\nexport function isCurrentTitleDataLoaded() {\n  const { cashOfAnimeSearch, currentTitle } = window.dataStore;\n  return cashOfAnimeSearch[currentTitle];\n}\n\nfunction validateAndLoadData() {\n  const { currentTitle } = window.dataStore;\n\n  const url = getAnimeSearchUrl(currentTitle);\n  if (!isCurrentTitleDataLoaded()) {\n    return fetch(url)\n      .then(response => response.json())\n      .then(data => {\n        return { data };\n      });\n  }\n\n  return Promise.resolve({});\n}\n\nexport function performSearch(animeTitle) {\n  window.dataStore.currentTitle = animeTitle;\n  window.dataStore.error = null;\n  window.dataStore.isDataLoading = true;\n  renderApp();\n\n  validateAndLoadData()\n    .then(({ error, data }) => {\n      window.dataStore.isDataLoading = false;\n      const filterAnime = filterAnimeByTitle(data);\n      if (error) {\n        window.dataStore.error = error;\n      } else if (!filterAnime.length) {\n        window.dataStore.error = `No results were found for \"${window.dataStore.currentTitle}\".\n        Make sure the request was submitted without errors. `;\n      } else {\n        window.dataStore.cashOfAnimeSearch[animeTitle] = filterAnime;\n      }\n    })\n    .catch(() => {\n      window.dataStore.error = 'Happened some error.';\n    })\n    .finally(() => {\n      renderApp();\n    });\n}\n\nfunction filterAnimeByTitle(data) {\n  return data.results.filter(anime => {\n    if (anime.rated === 'Rx') return false;\n    else if (!anime.title.toLowerCase().includes(window.dataStore.currentTitle.toLowerCase()))\n      return false;\n    return true;\n  });\n}\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement } from '../../framework/element';\nimport styles from './css/style.css';\nimport { performSearch } from '../../data/animeData';\n\nexport default function SortForm() {\n  return (\n    <div class={styles.sectionForm}>\n      <form\n        class={styles.sortForm}\n        id=\"sortForm\"\n        name=\"sortForm\"\n        onsumbit={e => e.explicitOriginalTarget.nextElementSibling}\n      >\n        {SearchInputSortForm()}\n        {ApplyButtonSortForm()}\n      </form>\n    </div>\n  );\n}\n\nfunction SearchInputSortForm() {\n  return (\n    <input\n      class={styles.search}\n      id=\"search\"\n      type=\"text\"\n      name=\"search\"\n      value={window.dataStore.currentTitle}\n      autofocus\n    />\n  );\n}\n\nfunction ApplyButtonSortForm() {\n  return (\n    <button\n      class={styles.formButton}\n      id=\"formButton\"\n      type=\"submit\"\n      name=\"searchButton\"\n      onclick={e => performSearch(e.target.form.firstChild.value)}\n    >\n      Click me!\n    </button>\n  );\n}\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement } from '../../framework/element';\nimport styles from './css/style.css';\n\nexport default function Card(card) {\n  return (\n    <div class={styles.card} id={card.mal_id}>\n      <div class={styles.cardImgContainer}>\n        <img class={styles.cardImg} src={card.image_url} alt={card.title} />\n      </div>\n      <div class={styles.cardItemContainer}>\n        <h3 class={styles.cardItemH3}>{card.title}</h3>\n        <span class={styles.cardItemRating}>{card.score} / 10</span>\n        <p class={styles.cardItemText}>{card.synopsis}</p>\n        <button class={styles.cardButton}>More</button>\n      </div>\n    </div>\n  );\n}\n","export { default } from './Card';\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement } from '../../framework/element';\nimport styles from './css/style.css';\nimport Card from '../Card';\n\nexport default function CardsList(animeSearch) {\n  return (\n    <main class={styles.main}>\n      <div class={styles.cardsItems} id=\"cardsItems\">\n        {animeSearch.map(card => Card(card))}\n      </div>\n    </main>\n  );\n}\n","export { default } from './CardsList';\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement } from '../../framework/element';\nimport { paragraphOfState } from './css/style.css';\nimport { isCurrentTitleDataLoaded } from '../../data/animeData';\nimport CardsList from '../CardsList';\n\nexport default function AnimeCardsResults() {\n  const { currentTitle, isDataLoading, error } = window.dataStore;\n\n  let content = ``;\n  if (currentTitle === '') {\n    content = (\n      <div>\n        <p>Good day (or evening)!</p>\n        <p>You could search anime whatever you like!</p>\n      </div>\n    );\n  } else {\n    if (isDataLoading) {\n      content = 'Loading...';\n    }\n\n    if (error !== null) {\n      content = error;\n    }\n\n    if (isCurrentTitleDataLoaded()) {\n      content = CardsList(isCurrentTitleDataLoaded());\n    }\n  }\n\n  return <p class={paragraphOfState}>{content}</p>;\n}\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../../framework/element';\nimport Header from '../Header/Header';\nimport SortForm from '../SortForm/SortForm';\nimport AnimeCardsResults from '../AnimeCardsResults/AnimeCardsResults';\n\nexport default function App() {\n  return (\n    <>\n      <Header />\n      <SortForm />\n      <AnimeCardsResults />\n    </>\n  );\n}\n","export { default } from './App';\n","import dataStore from './data/dataStore';\nimport renderApp from './framework/render.js';\nimport App from './components/App';\n\nwindow.dataStore = dataStore;\n\nrenderApp(App, document.getElementById('app'));\n"]}