{"version":3,"sources":["js/script.js"],"names":["window","renderApp","performSearch","validateAndLoadData","dataStore","currentTitle","isDataLoading","error","cashOfAnimeSearch","animeTitles","allowedTitles","Object","values","getAnimeSearchUrl","search","filter","animeTitle","join","replace","isCurrentTitleDataLoaded","includes","Promise","resolve","url","fetch","then","response","json","data","results","catch","finally","document","querySelector","innerHTML","App","AnimeCardsResults","content","CardsList","styles","paragraphOfState","Header","SortForm","header","headerH1","sectionForm","sortForm","blockSearch","SearchInputSortForm","ApplyButtonSortForm","formButton","animeSearch","form","forms","value","main","cardsItems","anime","rated","title","map","card","Card","mal_id","image_url","cardItemContainer","cardItemH3","cardItemRating","cardItemText","synopsis"],"mappings":";;;AAmKC,aAnKD,IAAA,EAAA,EAAA,QAAA,qBAmKC,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAjKDA,OAAOC,UAAYA,EACnBD,OAAOE,cAAgBA,EACvBF,OAAOG,oBAAsBA,EAE7BH,OAAOI,UAAY,CACjBC,aAAc,GACdC,eAAe,EACfC,MAAO,KACPC,kBAAmB,IAGrB,MAAMC,EAAc,CAAC,YAAa,eAC5BC,EAAgBC,OAAOC,OAAOH,GAEpC,SAASI,EAAkBC,GAGjB,iDAFWJ,EAAcK,OAAOC,GAAcA,IAAeF,GACtCG,OAAOC,QAAQ,OAAQ,aAIxD,SAASC,IACD,MAAA,kBAAEX,EAAF,aAAqBH,GAAiBL,OAAOI,UAC5CI,OAAAA,EAAkBH,GAG3B,SAASF,IACD,MAAA,aAAEE,GAAiBL,OAAOI,UAE5B,IAACM,EAAcU,SAASf,GAAe,CACnCE,MAAAA,oCAA0CG,EAAcO,KAAK,SAC5DI,OAAAA,QAAQC,QAAQ,CAAEf,MAAAA,IAGrBgB,MAAAA,EAAMV,EAAkBR,GAC1B,OAACc,IAQEE,QAAQC,QAAQ,IAPdE,MAAMD,GACVE,KAAKC,GAAYA,EAASC,QAC1BF,KAAKG,IACG,CAAEA,KAAAA,KAOjB,SAAS1B,EAAcc,GACrBhB,OAAOI,UAAUC,aAAeW,EAChChB,OAAOI,UAAUG,MAAQ,KACzBP,OAAOI,UAAUE,eAAgB,EAEjCN,OACGG,sBACAsB,KAAK,EAAGlB,MAAAA,EAAOqB,KAAAA,MACd5B,OAAOI,UAAUE,eAAgB,EAC7BC,EACFP,OAAOI,UAAUG,MAAQA,EAChBqB,IACT5B,OAAOI,UAAUI,kBAAkBQ,GAAcY,EAAKC,WAGzDC,MAAM,KACL9B,OAAOI,UAAUG,MAAQ,yBAE1BwB,QAAQ,KACP/B,OAAOC,cAMb,SAASA,IACP+B,SAASC,cAAc,QAAQC,UAAYC,IAG7C,SAASC,IACD,MAAA,aAAE/B,EAAF,cAAgBC,EAAhB,MAA+BC,GAAUP,OAAOI,UAElDiC,IAAAA,EAAU,GAiBN,MAhBa,KAAjBhC,EACFgC,EAAU,kCAEN/B,IACF+B,EAAU,cAGE,OAAV9B,IACF8B,EAAU9B,GAGRY,MACFkB,KAAaC,EAAUnB,sBAIPoB,EAAOC,QAAAA,qBAAqBH,QAGlD,SAASF,IACC,SAAEM,kBACAC,kBACAN,MAEZ,SAASK,IACC,wBAAiBF,EAAOI,QAAAA,oCACTJ,EAAOK,QAAAA,yEAGhC,SAASF,IACC,sBAAeH,EAAOM,QAAAA,6CACHN,EAAOO,QAAAA,yEACNP,EAAOQ,QAAAA,oCACjBC,0BACAC,yEAKpB,SAASD,IACC,yCACeT,EAAOzB,QAAAA,6HAIPd,OAAOI,UAAUC,sHAK1C,SAAS4C,IACC,wBAAiBV,EAAOW,QAAAA,gLAOlC,SAASZ,EAAUa,GACXC,MACAtC,EADOkB,SAASqB,MAAMP,SACRhC,OAAOwC,MACnB,sBAAef,EAAOgB,QAAAA,mCACNhB,EAAOiB,QAAAA,+CACjBL,EACCpC,OAAO0C,GACc,OAAhBA,EAAMC,SACAD,EAAME,MAAMvC,SAASN,IAGhC8C,IAAIC,GAAQC,EAAKD,IACjB5C,KAAK,6CAKtB,SAAS6C,EAAKD,GACJ,qBAActB,EAAOsB,QAAAA,aAAaA,EAAKE,mCACzBF,EAAKG,mBAAmBH,EAAKF,2CAC3BpB,EAAO0B,QAAAA,iDACN1B,EAAO2B,QAAAA,eAAeL,EAAKF,sBAAsBpB,EAAO4B,QAAAA,oBAAoBN,EAAKH,+CAClFnB,EAAO6B,QAAAA,iBAAiBP,EAAKQ,qDA1FvDpE","file":"script.d4fdb06c.js","sourceRoot":"..","sourcesContent":["import styles from '../css/style.css';\n\nwindow.renderApp = renderApp;\nwindow.performSearch = performSearch;\nwindow.validateAndLoadData = validateAndLoadData;\n\nwindow.dataStore = {\n  currentTitle: '',\n  isDataLoading: false,\n  error: null,\n  cashOfAnimeSearch: {},\n};\n\nconst animeTitles = ['One Piece', 'Tokyo Ghoul'];\nconst allowedTitles = Object.values(animeTitles);\n\nfunction getAnimeSearchUrl(search) {\n  const checkTitle = allowedTitles.filter(animeTitle => animeTitle === search);\n  const stringToUrl = checkTitle.join().replace(/\\s+/g, '');\n  return `https://api.jikan.moe/v3/search/anime?q=${stringToUrl}&page=1`;\n}\n\nfunction isCurrentTitleDataLoaded() {\n  const { cashOfAnimeSearch, currentTitle } = window.dataStore;\n  return cashOfAnimeSearch[currentTitle];\n}\n\nfunction validateAndLoadData() {\n  const { currentTitle } = window.dataStore;\n\n  if (!allowedTitles.includes(currentTitle)) {\n    const error = `Enter one of the anime titles: ${allowedTitles.join(', ')}.`;\n    return Promise.resolve({ error });\n  }\n\n  const url = getAnimeSearchUrl(currentTitle);\n  if (!isCurrentTitleDataLoaded()) {\n    return fetch(url)\n      .then(response => response.json())\n      .then(data => {\n        return { data };\n      });\n  }\n\n  return Promise.resolve({});\n}\n\nfunction performSearch(animeTitle) {\n  window.dataStore.currentTitle = animeTitle;\n  window.dataStore.error = null;\n  window.dataStore.isDataLoading = true;\n\n  window\n    .validateAndLoadData()\n    .then(({ error, data }) => {\n      window.dataStore.isDataLoading = false;\n      if (error) {\n        window.dataStore.error = error;\n      } else if (data) {\n        window.dataStore.cashOfAnimeSearch[animeTitle] = data.results;\n      }\n    })\n    .catch(() => {\n      window.dataStore.error = 'Happened some error.';\n    })\n    .finally(() => {\n      window.renderApp();\n    });\n}\n\nrenderApp();\n\nfunction renderApp() {\n  document.querySelector('#app').innerHTML = App();\n}\n\nfunction AnimeCardsResults() {\n  const { currentTitle, isDataLoading, error } = window.dataStore;\n\n  let content = '';\n  if (currentTitle === '') {\n    content = 'Search anime whatever you like';\n  } else {\n    if (isDataLoading) {\n      content = 'Loading...';\n    }\n\n    if (error !== null) {\n      content = error;\n    }\n\n    if (isCurrentTitleDataLoaded()) {\n      content = `${CardsList(isCurrentTitleDataLoaded())}`;\n    }\n  }\n\n  return `<p class='${styles.paragraphOfState}'>${content}</p>`;\n}\n\nfunction App() {\n  return `${Header()}\n          ${SortForm()}\n          ${AnimeCardsResults()}`;\n}\nfunction Header() {\n  return `<header class=\"${styles.header}\">\n            <h1 class=\"${styles.headerH1}\" title=\"* read like Tsundoku\">積ん読 *</h1>\n          </header>`;\n}\nfunction SortForm() {\n  return ` <div class=\"${styles.sectionForm}\">\n              <form class=\"${styles.sortForm}\" id=\"sortForm\" name=\"sortForm\">\n                <div class=\"${styles.blockSearch}\">\n                  ${SearchInputSortForm()}\n                  ${ApplyButtonSortForm()}\n                </div>\n              </form>\n            </div>`;\n}\nfunction SearchInputSortForm() {\n  return `<input \n                class=\"${styles.search}\"\n                id=\"search\" \n                type=\"text\"\n                name=\"search\"\n                value=\"${window.dataStore.currentTitle}\"\n                onchange=\"window.performSearch(this.value)\"\n                autofocus\n          />`;\n}\nfunction ApplyButtonSortForm() {\n  return `<button class=\"${styles.formButton}\" \n                  id=\"formButton\" \n                  type=\"button\" \n                  name=\"searchButton\">\n                    Button\n            </button>`;\n}\nfunction CardsList(animeSearch) {\n  const form = document.forms.sortForm;\n  const search = form.search.value;\n  return `<main class=\"${styles.main}\">\n            <div class=\"${styles.cardsItems}\" id=\"cardsItems\">\n              ${animeSearch\n                .filter(anime => {\n                  if (anime.rated === 'Rx') return false;\n                  else if (!anime.title.includes(search)) return false;\n                  return true;\n                })\n                .map(card => Card(card))\n                .join('')}\n            </div>\n          </main>`;\n}\n\nfunction Card(card) {\n  return `<div class=\"${styles.card}\" id=\"${card.mal_id}\">\n            <img src=\"${card.image_url}\" alt=\"${card.title} poster\">\n            <div class=\"${styles.cardItemContainer}\">\n              <h3 class=\"${styles.cardItemH3}\">${card.title} <span class=\"${styles.cardItemRating}\">[${card.rated}]</span></h3>\n              <p class=\"${styles.cardItemText}\">${card.synopsis}</p>\n            </div>\n          </div>`;\n}\n"]}